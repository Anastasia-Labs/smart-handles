name: CI

on:
  push:
    branches:
      - "master"
      - "develop"
  pull_request:
    branches:
      - "master"
      - "develop"
  workflow_dispatch: {}

env:
  nix_conf: |
    experimental-features = nix-command flakes ca-derivations
    substituters = https://cache.iog.io https://cache.zw3rk.com https://cache.nixos.org/ https://nix-community.cachix.org
    trusted-public-keys = hydra.iohk.io:f/Ea+s+dFdN+3Y/G+FDgSq+a5NEWhJGzdjvKNGv0/EQ= loony-tools:pr9m4BkM/5/eSTZlkQyRt57Jz7OMBxNSUiMC4FkcNfk= cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= nix-community.cachix.org-1:mB9FSh9qf2dCimDSUo8Zy7bkq5CX+/rkCWyvRCYg3Fs=
    keep-outputs = true

jobs:
  lints:
    name: Build
    runs-on: ubuntu-latest
    permissions:
      actions: write
    steps:
      - uses: actions/checkout@v3

      - name: Install Nix
        uses: nixbuild/nix-quick-install-action@v26
        with:
          nix_conf: ${{ env.nix_conf }}

      - name: Cache Nix
        uses: actions/cache@v3
        with:
          key: nix-${{ runner.os }}-${{ hashFiles('**/*.nix') }}
          restore-keys: nix-${{ runner.os }}-
          path: /nix

      - name: Run `nix flake check`
        run: make ci
